{"version":3,"sources":["components/itemInput.js","components/todoItem.js","components/todoList.js","components/filters.js","components/todoApp.js","App.js","index.js"],"names":["ItemInput","props","useState","newItem","updateNewItem","type","value","onChange","e","target","onClick","event","preventDefault","trim","length","handler","TodoItem","className","style","completed","backgroundColor","title","deleteClickHandler","id","text","completedClickHandler","TodoList","k","newList","itemList","listUpdater","slice","concat","filteredList","map","item","filter","i","Filters","filterUpdater","color","TodoApp","addItemClickHandler","console","log","setState","editing","addItemInputHandler","preState","newFilter","state","this","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1234c0b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './itemInputStyles.css';\r\n\r\n\r\nconst ItemInput = (props)=> {\r\n    const [newItem, updateNewItem] = useState('');\r\n\r\n    const onChangeHandler = (e) => {\r\n        updateNewItem(e.target.value)\r\n    }\r\n\r\n    const onClickHandler = (event) => {\r\n        event.preventDefault();\r\n        if(newItem.trim().length)\r\n            props.handler(newItem);\r\n        updateNewItem('');\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <input type='text' value={newItem} onChange={onChangeHandler} />\r\n            <button type='submit' onClick={onClickHandler} >Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ItemInput;","import React from 'react';\r\nimport './todoItemStyles.css';\r\n\r\nfunction TodoItem(props) {\r\n\r\n    return (\r\n        <div className='todoItem'\r\n            style={props.completed ? { backgroundColor: '#03c03c' } : null}>\r\n\r\n            <button\r\n                className='crossButton'\r\n                title='Delete task'\r\n                onClick={() => { props.deleteClickHandler(props.id); }}\r\n            >&#10006;</button>\r\n\r\n            <div className='itemText'> {props.text} </div>\r\n\r\n            <button\r\n                className='tickButton'\r\n                title='Task completed'\r\n                onClick={() => { props.completedClickHandler(props.id); }}\r\n            >&#10003;</button>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from './todoItem';\r\n\r\nimport './todoListStyles.css';\r\n\r\n\r\nconst TodoList = (props) => {\r\n    \r\n    // console.log(props);\r\n\r\n    const completedClickHandler = (k) => {\r\n        const newList = [...props.itemList];\r\n        newList[k].completed = !newList[k].completed;\r\n        props.listUpdater(newList)\r\n    }\r\n\r\n    const deleteClickHandler = (k) => {\r\n        const newList = props.itemList.slice(0, k).concat(props.itemList.slice(k + 1));\r\n        props.listUpdater(newList)\r\n    }\r\n    \r\n    const filteredList = props.itemList.map(item => {\r\n        return props.filter == 'all' ? item :\r\n            ((props.filter == 'done' && item.completed) ? item :\r\n            ((props.filter == 'todo' && !item.completed) ? item : null ))\r\n    })\r\n    \r\n\r\n    return (\r\n        <div className='todoList'>\r\n            {\r\n                filteredList.map(\r\n                    (item, i) => {\r\n                        if (item != null)\r\n                            return (\r\n                                <TodoItem\r\n                                    key={i}\r\n                                    id={i}\r\n                                    text={item.text}\r\n                                    completed={item.completed}\r\n                                    completedClickHandler={completedClickHandler}\r\n                                    deleteClickHandler = {deleteClickHandler}\r\n                                />\r\n                            )\r\n                    })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;\r\n\r\n","import React from 'react';\r\n\r\nimport './filtersStyles.css'\r\n\r\nconst Filters = (props) => {\r\n    \r\n\r\n    return (\r\n        <div className='filterContainer'>\r\n            <div className='filter' id='all'\r\n                onClick={() => props.filterUpdater('all')}\r\n                style={props.filter=='all' ? {backgroundColor: 'white', color: 'black'}:null}\r\n            >\r\n                All\r\n            </div>\r\n            <div className='filter' id='done'\r\n                onClick={() => props.filterUpdater('done')}\r\n                style={props.filter=='done' ? {backgroundColor: 'white', color: 'black'}:null}\r\n            >\r\n                Done\r\n            </div>\r\n            <div className='filter' id='todo'\r\n                onClick={() => props.filterUpdater('todo')}\r\n                style={props.filter=='todo' ? {backgroundColor: 'white', color: 'black'}:null}\r\n            >\r\n                To do\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters;","import React from 'react';\r\n// import AddItemButton from './addItemButton';\r\nimport ItemInput from './itemInput';\r\nimport TodoList from './todoList';\r\n\r\nimport './todoAppStyles.css'\r\nimport Filters from './filters';\r\n\r\nclass TodoApp extends React.Component{\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            itemList:\r\n                [\r\n                    {\r\n                    text: \"Keep Smiling\",\r\n                    completed: false\r\n                    },\r\n                ],\r\n            \r\n            // editing: false,\r\n\r\n            filter: 'all'\r\n        }\r\n\r\n    }\r\n\r\n    addItemClickHandler = ()=> {\r\n        console.log(\"Editing set to TRUE\");\r\n        this.setState({\r\n            editing: true\r\n        })\r\n    }\r\n\r\n    addItemInputHandler = (item) => {\r\n        this.setState((preState) => {\r\n            return {\r\n                ...preState,\r\n                itemList: [\r\n                    ...preState.itemList,\r\n                    {\r\n                        text: item,\r\n                        completed: false\r\n                    }\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    listUpdater = (newList) => {\r\n        this.setState((preState) => {\r\n            return {\r\n                ...preState,\r\n                itemList: newList\r\n            }\r\n        })\r\n    }\r\n\r\n    filterUpdater = (newFilter) => {\r\n        this.setState({\r\n            filter: newFilter\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='todoApp'>\r\n                <div>\r\n                    <Filters filterUpdater={this.filterUpdater} filter={this.state.filter} />\r\n                    <TodoList\r\n                        itemList={this.state.itemList}\r\n                        filter={this.state.filter} \r\n                        listUpdater={this.listUpdater} \r\n                    />\r\n                </div>\r\n                <ItemInput handler={this.addItemInputHandler} />\r\n                {/* {this.state.editing ?\r\n                    <ItemInput handler={this.addItemInputHandler} /> :\r\n                    <AddItemButton handler={this.addItemClickHandler} />\r\n                } */}\r\n            </div>\r\n        )\r\n\r\n    \r\n    }\r\n}\r\n\r\nexport default TodoApp;","import './App.css';\nimport TodoApp from './components/todoApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <TodoApp />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}