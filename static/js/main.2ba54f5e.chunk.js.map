{"version":3,"sources":["components/itemInput.js","components/todoItem.js","components/todoList.js","components/todoApp.js","App.js","index.js"],"names":["ItemInput","props","useState","newItem","updateNewItem","type","value","onChange","e","target","onClick","handler","TodoItem","className","style","completed","backgroundColor","title","deleteClickHandler","id","text","completedClickHandler","TodoList","console","log","k","newList","itemList","listUpdater","slice","concat","map","item","i","TodoApp","addItemClickHandler","setState","editing","addItemInputHandler","preState","state","filter","this","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oVAwBeA,EApBG,SAACC,GACf,MAAiCC,mBAAS,IAA1C,mBAAOC,EAAP,KAAgBC,EAAhB,KAWA,OACI,gCACI,uBAAOC,KAAK,OAAOC,MAAOH,EAASI,SAXnB,SAACC,GACrBJ,EAAcI,EAAEC,OAAOH,UAWnB,wBAAQD,KAAK,SAASK,QARP,WACnBT,EAAMU,QAAQR,GACdC,EAAc,KAMV,qB,MCUGQ,MA1Bf,SAAkBX,GAEd,OACI,sBAAKY,UAAU,WACXC,MAAOb,EAAMc,UAAY,CAAEC,gBAAiB,WAAc,KAD9D,UAGI,wBACIH,UAAU,cACVI,MAAM,cACNP,QAAS,WAAQT,EAAMiB,mBAAmBjB,EAAMkB,KAHpD,oBAMA,oCAAOlB,EAAMkB,GAAb,IAAkBlB,EAAMmB,KAAxB,OAEA,wBACIP,UAAU,aACVI,MAAM,iBACNP,QAAS,WAAQT,EAAMoB,sBAAsBpB,EAAMkB,KAHvD,wBCqBGG,G,MAhCE,SAACrB,GAEdsB,QAAQC,IAAIvB,GAEZ,IAAMoB,EAAwB,SAACI,GAC3B,IAAMC,EAAO,YAAOzB,EAAM0B,UAC1BD,EAAQD,GAAGV,WAAaW,EAAQD,GAAGV,UACnCd,EAAM2B,YAAYF,IAGhBR,EAAqB,SAACO,GACxB,IAAMC,EAAUzB,EAAM0B,SAASE,MAAM,EAAGJ,GAAGK,OAAO7B,EAAM0B,SAASE,MAAMJ,EAAI,IAC3ExB,EAAM2B,YAAYF,IAGtB,OACI,qBAAKb,UAAU,WAAf,SAEQZ,EAAM0B,SAASI,KACX,SAACC,EAAMC,GAAP,OAAa,cAAC,EAAD,CAETd,GAAIc,EACJb,KAAMY,EAAKZ,KACXL,UAAWiB,EAAKjB,UAChBM,sBAAuBA,EACvBH,mBAAsBA,GALjBe,UCsDdC,G,wDAxEX,aAAe,IAAD,8BACV,gBAuBJC,oBAAsB,WAClBZ,QAAQC,IAAI,uBACZ,EAAKY,SAAS,CACVC,SAAS,KA3BH,EA+BdC,oBAAsB,SAACN,GACnB,EAAKI,UAAS,SAACG,GACX,OAAO,2BACAA,GADP,IAEIZ,SAAS,GAAD,mBACDY,EAASZ,UADR,CAEJ,CACIP,KAAMY,EACNjB,WAAW,WAvCjB,EA8Cda,YAAc,SAACF,GACX,EAAKU,UAAS,SAACG,GACX,OAAO,2BACAA,GADP,IAEIZ,SAAUD,QA/ClB,EAAKc,MAAQ,CACTb,SACI,CACI,CACAP,KAAM,0BACNL,WAAW,GAEX,CACAK,KAAM,2BACNL,WAAW,IAMnB0B,OAAQ,OAlBF,E,0CAwDd,WACI,OACI,sBAAK5B,UAAU,UAAf,UACI,cAAC,EAAD,CAAUc,SAAUe,KAAKF,MAAMb,SAAUC,YAAcc,KAAKd,cAC5D,cAAC,EAAD,CAAWjB,QAAS+B,KAAKJ,6B,GA7DnBK,IAAMC,YCMbC,MAVf,WACE,OACE,qBAAKhC,UAAU,MAAf,SAEE,cAAC,EAAD,OCFNiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2ba54f5e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './inputItemStyles.css';\r\n\r\n\r\nconst ItemInput = (props)=> {\r\n    const [newItem, updateNewItem] = useState('');\r\n\r\n    const onChangeHandler = (e) => {\r\n        updateNewItem(e.target.value)\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        props.handler(newItem);\r\n        updateNewItem('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type='text' value={newItem} onChange={onChangeHandler} />\r\n            <button type='submit' onClick={onClickHandler} >Add</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemInput;","import React from 'react';\r\nimport './todoItemStyles.css';\r\n\r\nfunction TodoItem(props) {\r\n\r\n    return (\r\n        <div className='todoItem'\r\n            style={props.completed ? { backgroundColor: '#03c03c' } : null}>\r\n\r\n            <button\r\n                className='crossButton'\r\n                title='Delete task'\r\n                onClick={() => { props.deleteClickHandler(props.id); }}\r\n            >&#10060;</button>\r\n\r\n            <div> {props.id} {props.text} </div>\r\n\r\n            <button\r\n                className='tickButton'\r\n                title='Task completed'\r\n                onClick={() => { props.completedClickHandler(props.id); }}\r\n            >&#10003;</button>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from './todoItem';\r\n\r\nimport './todoListStyles.css';\r\n\r\n\r\nconst TodoList = (props) => {\r\n    \r\n    console.log(props);\r\n\r\n    const completedClickHandler = (k) => {\r\n        const newList = [...props.itemList];\r\n        newList[k].completed = !newList[k].completed;\r\n        props.listUpdater(newList)\r\n    }\r\n\r\n    const deleteClickHandler = (k) => {\r\n        const newList = props.itemList.slice(0, k).concat(props.itemList.slice(k + 1));\r\n        props.listUpdater(newList)\r\n    }    \r\n\r\n    return (\r\n        <div className='todoList'>\r\n            {\r\n                props.itemList.map(\r\n                    (item, i) => <TodoItem\r\n                        key={i}\r\n                        id={i}\r\n                        text={item.text}\r\n                        completed={item.completed}\r\n                        completedClickHandler={completedClickHandler}\r\n                        deleteClickHandler = {deleteClickHandler}\r\n                        />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;\r\n\r\n","import React from 'react';\r\n// import AddItemButton from './addItemButton';\r\nimport ItemInput from './itemInput';\r\nimport TodoList from './todoList';\r\n\r\nimport './todoAppStyles.css'\r\n\r\nclass TodoApp extends React.Component{\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            itemList:\r\n                [\r\n                    {\r\n                    text: \"Complete the assignment\",\r\n                    completed: false\r\n                    },\r\n                    {\r\n                    text: \"Fill GS application form\",\r\n                    completed: true\r\n                    }\r\n                ],\r\n            \r\n            // editing: false,\r\n\r\n            filter: 'ALL'\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    addItemClickHandler = ()=> {\r\n        console.log(\"Editing set to TRUE\");\r\n        this.setState({\r\n            editing: true\r\n        })\r\n    }\r\n\r\n    addItemInputHandler = (item) => {\r\n        this.setState((preState) => {\r\n            return {\r\n                ...preState,\r\n                itemList: [\r\n                    ...preState.itemList,\r\n                    {\r\n                        text: item,\r\n                        completed: false\r\n                    }\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    listUpdater = (newList) => {\r\n        this.setState((preState) => {\r\n            return {\r\n                ...preState,\r\n                itemList: newList\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='todoApp'>\r\n                <TodoList itemList={this.state.itemList} listUpdater={ this.listUpdater }/>\r\n                <ItemInput handler={this.addItemInputHandler} />\r\n                {/* {this.state.editing ?\r\n                    <ItemInput handler={this.addItemInputHandler} /> :\r\n                    <AddItemButton handler={this.addItemClickHandler} />\r\n                } */}\r\n            </div>\r\n        )\r\n\r\n    \r\n    }\r\n}\r\n\r\nexport default TodoApp;","import './App.css';\nimport TodoApp from './components/todoApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <TodoApp />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}